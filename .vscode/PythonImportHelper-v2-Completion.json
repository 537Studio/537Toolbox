[
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PyQt5.QtCore",
        "description": "PyQt5.QtCore",
        "isExtraImport": true,
        "detail": "PyQt5.QtCore",
        "documentation": {}
    },
    {
        "label": "QColor",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QFont",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QPixmap",
        "importPath": "PyQt5.QtGui",
        "description": "PyQt5.QtGui",
        "isExtraImport": true,
        "detail": "PyQt5.QtGui",
        "documentation": {}
    },
    {
        "label": "QApplication",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QHBoxLayout",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QSpacerItem",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QSizePolicy",
        "importPath": "PyQt5.QtWidgets",
        "description": "PyQt5.QtWidgets",
        "isExtraImport": true,
        "detail": "PyQt5.QtWidgets",
        "documentation": {}
    },
    {
        "label": "tkinter",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "tkinter",
        "description": "tkinter",
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "ImageTk",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "GradientWindow",
        "kind": 6,
        "importPath": "537main",
        "description": "537main",
        "peekOfCode": "class GradientWindow(QWidget):\n    def __init__(self):\n        super().__init__()\n        self.setWindowTitle('/(ㄒoㄒ)/~~')\n        # 主布局，水平布局\n        main_layout = QHBoxLayout()\n        main_layout.setSpacing(0)  # 无间距\n        main_layout.setContentsMargins(0, 0, 0, 0)  # 无外边距\n        # 添加左侧空白页面\n        self.create_left_panel(main_layout)",
        "detail": "537main",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "537main",
        "description": "537main",
        "peekOfCode": "app = QApplication(sys.argv)\nwindow = GradientWindow()\nwindow.show()\nsys.exit(app.exec_())",
        "detail": "537main",
        "documentation": {}
    },
    {
        "label": "window",
        "kind": 5,
        "importPath": "537main",
        "description": "537main",
        "peekOfCode": "window = GradientWindow()\nwindow.show()\nsys.exit(app.exec_())",
        "detail": "537main",
        "documentation": {}
    },
    {
        "label": "GradientWindow",
        "kind": 6,
        "importPath": "tkmain",
        "description": "tkmain",
        "peekOfCode": "class GradientWindow(tk.Tk):\n    def __init__(self):\n        super().__init__()\n        # Base attribtues setup\n        self.wm_geometry(\"600x350+100+100\")\n        self.wm_title(\"/(ㄒoㄒ)/~~\")\n        self.focus_force()\n        # Some variables defintion\n        self.logo = ImageTk.PhotoImage(Image.open(\n            \"images/logo.png\").resize((120, 120)))",
        "detail": "tkmain",
        "documentation": {}
    },
    {
        "label": "url",
        "kind": 5,
        "importPath": "update",
        "description": "update",
        "peekOfCode": "url = 'https://www.537studio.com/software/update/537Toolbox_NewVersion.txt'\n# 发送HTTP请求获取网页内容\nresponse = requests.get(url)\n# 确保请求成功\nif response.status_code == 200:\n    # 定义保存文件的路径为当前目录下的temp文件夹\n    # 如果temp文件夹不存在，os.path.join和随后的文件操作会自动创建它\n    file_path = os.path.join('temp', 'new_version.txt')\n    # 打开一个文件以写入模式，并使用ANSI编码（Windows-1252）\n    with open(file_path, 'w', encoding='ANSI') as file:",
        "detail": "update",
        "documentation": {}
    },
    {
        "label": "response",
        "kind": 5,
        "importPath": "update",
        "description": "update",
        "peekOfCode": "response = requests.get(url)\n# 确保请求成功\nif response.status_code == 200:\n    # 定义保存文件的路径为当前目录下的temp文件夹\n    # 如果temp文件夹不存在，os.path.join和随后的文件操作会自动创建它\n    file_path = os.path.join('temp', 'new_version.txt')\n    # 打开一个文件以写入模式，并使用ANSI编码（Windows-1252）\n    with open(file_path, 'w', encoding='ANSI') as file:\n        # 将网页内容写入文件\n        file.write(response.text)",
        "detail": "update",
        "documentation": {}
    }
]